Starting audit...
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\InputDatabase.java:16:27: Parameter dbUser should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\InputDatabase.java:24:36: Parameter dbCurrentMovies should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\InputDatabase.java:32:39: Parameter dbSubscribedGenres should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\InputDatabase.java:40:32: Parameter userRatings should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Main.java:8:26: Using the '.*' form of import should be avoided - sortingComparators.*. [AvoidStarImport]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Main.java:13:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Main.java:17:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Main.java:22:5: Method length is 1,386 lines (max allowed is 150). [MethodLength]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Main.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Main.java:1409:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Main.java:1415:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\CurrentMovie.java:1:9: Name 'movieClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\CurrentMovie.java:22:5: Class 'CurrentMovie' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentMovie' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\CurrentMovie.java:26:5: Class 'CurrentMovie' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentMovie' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\CurrentMovie.java:30:5: Class 'CurrentMovie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentMovie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\CurrentMovie.java:34:5: Class 'CurrentMovie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentMovie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\CurrentMovie.java:38:5: Class 'CurrentMovie' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentMovie' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\CurrentMovie.java:42:5: Class 'CurrentMovie' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentMovie' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:1:9: Name 'movieClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:25:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:29:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:33:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:37:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:41:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:45:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:49:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:53:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:57:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:61:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:65:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\movieClasses\Movie.java:69:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Notification.java:1:7: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Notification.java:5:18: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Notification.java:5:36: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Notification.java:21:30: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Notification.java:29:28: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\sortingComparators\DecreasingDecreasing.java:1:9: Name 'sortingComparators' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\sortingComparators\DecreasingIncreasing.java:1:9: Name 'sortingComparators' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\sortingComparators\DecreasingNull.java:1:9: Name 'sortingComparators' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\sortingComparators\IncreasingDecreasing.java:1:9: Name 'sortingComparators' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\sortingComparators\IncreasingIncreasing.java:1:9: Name 'sortingComparators' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\sortingComparators\IncreasingNull.java:1:9: Name 'sortingComparators' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\sortingComparators\NullDecreasing.java:1:9: Name 'sortingComparators' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\sortingComparators\NullIncreasing.java:1:9: Name 'sortingComparators' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Test.java:153: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Test.java:201:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\Test.java:217: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\User.java:6:7: Name 'currentUser' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\User.java:8:40: '15' is a magic number. [MagicNumber]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\User.java:112:34: Parameter notifications should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\User.java:130:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\Streaming-Platform\.\src\User.java:134:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 54 errors.
