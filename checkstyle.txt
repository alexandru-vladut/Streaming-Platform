Starting audit...
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\InputDatabase.java:14:27: Parameter dbUser should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\InputDatabase.java:22:36: Parameter dbCurrentMovies should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\InputDatabase.java:30:39: Parameter dbSubscribedGenres should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\InputDatabase.java:38:32: Parameter userRatings should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:10:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:14:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:19:5: Method length is 1,524 lines (max allowed is 150). [MethodLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:118:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:121:21: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:249:21: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:354: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:357: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:368: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:400: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:405: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:548: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1023: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1033: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1096: Line is longer than 100 characters (found 130). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1097: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1100: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1155: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1168: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1183: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1257:21: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1274: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1275: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1326:21: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1351: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1378: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1398: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1444: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1455: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1456:48: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1457: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1467: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1468:48: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1469: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1479: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1480:48: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1491: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1492:48: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1511: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1544:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Main.java:1550:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:67:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:71:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:75:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:79:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:83:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:87:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:91:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:95:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:99:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:103:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:107:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Movie.java:111:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:5:18: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:5:36: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:15:20: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:15:21: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:17:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:21:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:21:30: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:25:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:29:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Notification.java:29:28: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Test.java:158: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Test.java:206:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\Test.java:222: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\User.java:4:7: Name 'currentUser' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\User.java:6:40: '15' is a magic number. [MagicNumber]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\User.java:110:34: Parameter notifications should be final. [FinalParameters]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\User.java:128:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexn\Desktop\OOP-Project\.\src\User.java:132:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 78 errors.
